#!/usr/bin/env bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

set -eufo pipefail

echo "INFO: Starting git's pre-push hook"
echo

GIT_ROOT_DIR="$(git rev-parse --show-toplevel)"
pushd "${GIT_ROOT_DIR}" > /dev/null

if [[ ! -f "local_env.sh" ]]; then
	echo "ERROR: Was expecting local_env.sh to exist. Please setup your local testing environment as explained on the README.md file."
	exit 1
elif [[ ! -x "scripts/local_test.bash" ]]; then
	echo "ERROR: Expected an executable scripts/local_test.bash."
	exit 1
fi

if ! source local_env.sh; then
	echo "ERROR: Failed to source local_env.sh"
	exit 1
fi

if ! scripts/local_test.bash; then
	echo "ERROR: Failed to execute scripts/local_test.bash"
	exit 1
fi

popd > /dev/null

echo "INFO: Finished git's pre-push hook successfully."
echo

exit 0
